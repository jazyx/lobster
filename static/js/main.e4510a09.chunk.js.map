{"version":3,"sources":["Components/item.jsx","Components/image.jsx","Components/info.jsx","Components/buttonBar.jsx","Components/menu.jsx","App.js","serviceWorker.js","index.js"],"names":["StyledItem","styled","div","props","height","StyledText","p","fontSize","StyledDates","Item","canvas","document","createElement","adjustSizes","bind","window","addEventListener","rect","body","getBoundingClientRect","maxWidth","width","fullHeight","this","getFullHeight","maxHeight","showImage","Math","min","sizes","getMaxSizes","text","dates","step","context","getContext","steps","font","measureText","item","getOptimumFontSize","style","Component","StyledImage","img","dim","Image","folder","image","src","alt","StyledInfoDiv","size","padding","StyledListWrapper","StyledUList","ul","Info","adjustSize","getSizes","state","setState","landscape","credits","source","info","author","push","key","href","target","licenceURL","licence","details","map","index","words","length","infoType","getCredits","getWords","getDetails","getInfo","StyledButtonDiv","StyledButton","button","active","disabled","hide","Buttons","noInfo","empty","indexOf","noWords","onClick","showMenu","go","first","show","last","StyledMenu","StyledCheckBox","StyledCloseBox","Menu","toggleImage","close","checkBox","getCheckBox","closeBox","getCloseBox","App","toggleInfo","fetch","then","result","json","data","colours","items","initialize","error","console","log","shuffle","array","ii","jj","floor","random","temp","max","isNaN","getEmpty","undefined","event","tagName","menu","hideInfo","className","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4510a09.chunk.js","sourcesContent":["/** item.js **\n *\n *\n**/\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\n\n\nconst StyledItem = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: ${props => props.height}px;\n`\n\nconst StyledText = styled.p`\n  font-size: ${props => props.fontSize};\n`\n\n\nconst StyledDates = styled.p`\n  width: 100%;\n  margin: 0;\n  text-align: center;\n  font-size: 3vmin;\n`\n\n\n\nexport default class Item extends Component {\n  constructor(props) {\n    super(props)\n\n    this.canvas = document.createElement('canvas')\n    this.adjustSizes = this.adjustSizes.bind(this)\n\n    window.addEventListener(\"resize\", this.adjustSizes, false)\n  }\n\n\n  getMaxSizes() {\n    const rect = document.body.getBoundingClientRect()\n    const maxWidth = rect.width   * 0.96\n    const fullHeight = this.getFullHeight(rect)\n    const maxHeight = fullHeight *Â 0.8699\n\n    return { maxWidth, maxHeight, fullHeight }\n  }\n\n\n  getFullHeight(rect) {\n    if (rect.width > rect.height && !this.props.showImage) {\n      // Hide the info component, show only this item component\n      return rect.height\n\n    } else if (rect.height *Â 0.7 > rect.width){\n      return rect.height - rect.width * 1.1\n    } else {\n      return rect.height - (Math.min(rect.width, rect.height *Â 0.8))\n    }\n  }\n\n\n  adjustSizes() {\n    this.sizes = this.getMaxSizes()\n  }\n\n\n  getOptimumFontSize(text, dates) {\n    const context = this.canvas.getContext('2d')\n    const maxHeight = ( dates )\n                      ? this.sizes.fullHeight * 0.7\n                      : this.sizes.maxHeight\n\n    let width\n      , step\n    let height = step = maxHeight\n    let steps = 16\n\n    do {\n      context.font = `${height}px sans-serif`\n      width = context.measureText(text).width\n\n      steps -= 1\n      step /= 2\n\n      if (width > this.sizes.maxWidth) {\n        height -= step\n      } else if (height === maxHeight) {\n        step = 0\n      } else {\n        height += step\n      }\n\n    } while (steps && (step > 0.01 || width > this.sizes.maxWidth))\n\n    return height + \"px\"\n  }\n\n\n  render() {\n    this.adjustSizes()\n    const text = this.props.item.text\n    const dates = this.props.item.dates\n    const fontSize = this.getOptimumFontSize(text, dates)\n    const height = this.sizes.fullHeight\n\n    return (\n      <StyledItem\n        height={height}\n      >\n        <StyledText\n          style={{fontSize: fontSize}}\n        >\n          {text}\n        </StyledText>\n        <StyledDates>\n          {dates}\n        </StyledDates>\n      </StyledItem>\n    )\n  }\n}","/** image.js **\n *\n *\n**/\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  z-index: 0;\n  width: 100%;\n  pointer-events: none;\n  opacity: ${props => props.dim\n                    ? 0.333\n                    : 1\n            }\n\n`\n\nexport default class Image extends Component {\n  constructor(props) {\n    super(props)\n    this.folder = \"img/\"\n  }\n\n\n  render() {\n    const image = this.props.image\n\n    if (!image || image.src === \"XXX\") {\n      return \"\"\n    }\n\n    return (\n      <StyledImage\n        src={this.folder + image.src}\n        alt={this.props.text}\n        dim={this.props.dim}\n      />\n    )\n  }\n}","/** info.js **\n *\n *\n**/\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Image from './image'\n\n\nconst StyledInfoDiv = styled.div`\n  position: relative;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  padding-bottom: ${props => props.padding}px;\n\n/*  @media (min-aspect-ratio: 1/1) {\n    height: 0\n    display: none;\n  } */\n`\n\nconst StyledListWrapper = styled.div`\n  height: calc(100% - 10vmin);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n\n  @media (max-aspect-ratio: 7/10) {\n    height: 100%;\n  }\n\n`\n\nconst StyledUList = styled.ul`\n  width: 100%;\n  z-index: 1;\n\n  font-size: 4vw;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  overflow-y: auto;\n\n  @media (min-aspect-ratio: 8/10) {\n    font-size: 3.2vh;\n  }\n\n  & li {\n    margin: 0.33em 0;\n  }\n\n  & a {\n    color: #fff;\n  }\n`\n\n\nexport default class Info extends Component {\n  constructor(props) {\n    super(props)\n\n    this.adjustSize    = this.adjustSize.bind(this)\n    window.addEventListener(\"resize\", this.adjustSize, false)\n\n    const sizes = this.getSizes()\n    this.state = sizes\n  }\n\n\n  componentDidMount() {\n    this.adjustSize()\n  }\n\n\n  adjustSize() {\n    const sizes = this.getSizes()\n    this.setState( sizes )\n  }\n\n\n  getSizes() {\n    const rect = document.body.getBoundingClientRect()\n    const landscape = rect.width > rect.height\n    const size = Math.min(rect.width, rect.height * 0.8)\n\n    // HACK: padding would be better treated as 10vmin, but Android\n    // doesn't seem to like that\n    const padding = rect.width * 0.1\n    return { size, padding, landscape }\n  }\n\n\n  getCredits() {\n    const credits = this.props.item.image\n    // { \"src\": \"marilyn.jpg\"\n    // , \"author\": \"Frank Powolny\"\n    // , \"source\": \"https://commons.wikimedia.org/xxx.jpg\"\n    // , \"licence\": \"Public Domain\"\n    // , \"licenceURL\": \"\"\n    // }\n\n    if (!credits || credits.source === \"XXX\") {\n      return \"\"\n    }\n\n    const info = []\n    if (credits.author) {\n      info.push(<li key=\"author\">Image by {credits.author}</li>)\n    }\n\n    info.push(\n      <li key=\"source\">\n        <a href={credits.source} target=\"credits\">Original image</a>\n      </li>\n    )\n\n    if (credits.licenceURL) {\n      info.push(\n        <li key=\"licence\">\n          <a href={credits.licenceURL}>{credits.licence}</a>\n        </li>\n      )\n    } else {\n      info.push(<li key=\"licence\">{credits.licence}</li>)\n    }\n\n    return info\n  }\n\n\n  getDetails() {\n    const details = this.props.item.details\n    // { \"src\": \"marilyn.jpg\"\n    // , \"author\": \"Frank Powolny\"\n    // , \"source\": \"https://commons.wikimedia.org/xxx.jpg\"\n    // , \"licence\": \"Public Domain\"\n    // , \"licenceURL\": \"\"\n    // }\n\n    if (!details || details[0] === \"ZZZ\") {\n      return \"\"\n    }\n\n    const info = details.map((item, index) => (\n      <li key={index}>\n        {item}\n      </li>\n    ))\n\n    return info\n  }\n\n\n  getWords() {\n    const words = this.props.item.words\n\n    if (!words || !words.length) {\n      return \"\"\n    }\n\n    const info = words.map((item, index) => (\n      <li key={index}>\n        {item}\n      </li>\n    ))\n\n    return info\n  }\n\n\n  getInfo(infoType) {\n    if (this.state.landscape) {\n      return \"\"\n    }\n\n    switch (infoType) {\n      case \"credits\":\n        return this.getCredits()\n\n       case \"words\":\n         return this.getWords()\n\n       case \"info\":\n         return this.getDetails()\n       default:\n         return \"\"\n    }\n  }\n\n\n  render() {\n    let info = this.getInfo(this.props.info)\n\n    if (info) {\n      info = (\n        <StyledUList>\n          {info}\n        </StyledUList>\n      )\n    }\n\n    return (\n      <StyledInfoDiv\n        size={this.state.size}\n        padding={this.state.padding}\n      >\n        <Image\n          image={this.props.item.image}\n          dim={!!info}\n        />\n        <StyledListWrapper>\n          {info}\n        </StyledListWrapper>\n      </StyledInfoDiv>\n    )\n  }\n}","/** buttonBar.js **\n *\n *\n**/\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\n\n\nconst StyledButtonDiv = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled.button`\n  width: 9vmin;\n  height: 9vmin;\n  border: none;\n  background-color: transparent;\n  background-image: url(\"img/icons/${props => props.src}\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  cursor: pointer;\n  opacity: 0.333;\n\n  &:hover {\n    opacity: 0.666;\n  }\n\n  &:active {\n    opacity: 1;\n  }\n\n  ${props => props.active\n           ? \"opacity:1!important;\"\n           : \"\"\n   }\n\n  ${props => props.disabled\n           ? \"opacity:0.1;pointer-events:none;cursor:default;\"\n           : \"\"\n   }\n\n  ${props => props.hide\n           ? \"visibility:hidden;pointer-events;cursor:default;\"\n           : \"\"\n   }\n\n`\n\nexport default class Buttons extends Component {\n  render() {\n    const noInfo = this.props.empty.indexOf(\"info\") > -1\n    const noWords = this.props.empty.indexOf(\"words\") > -1\n\n    return (\n      <StyledButtonDiv\n        onClick={this.props.showMenu}\n      >\n        <StyledButton\n          src=\"prev.svg\"\n          onClick={() => this.props.go(\"back\")}\n          disabled={this.props.first}\n        />\n        <StyledButton\n          src=\"info.svg\"\n          onClick={() => this.props.show(\"info\")}\n          active={this.props.info === \"info\"}\n          hide={this.props.hide || noInfo}\n        />\n        <StyledButton\n          src=\"words.svg\"\n          onClick={() => this.props.show(\"words\")}\n          active={this.props.info === \"words\"}\n          hide={this.props.hide || noWords}\n        />\n        <StyledButton\n          src=\"credits.svg\"\n          onClick={() => this.props.show(\"credits\")}\n          active={this.props.info === \"credits\"}\n          hide={this.props.hide}\n        />\n        <StyledButton\n          src=\"next.svg\"\n          onClick={() => this.props.go(\"next\")}\n          disabled={this.props.last}\n        />\n      </StyledButtonDiv>\n    )\n  }\n}","/** menu.js **\n *\n *\n**/\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\n\n\nconst StyledMenu = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: 20vh;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0,0,0,0.8);\n\n  ${props => props.show\n           ? \"display: flex;\"\n           : \"display: none;\"\n   }\n\n  @media (max-aspect-ratio: 1/1) {\n    display: none;\n  }\n`\n\nconst StyledCheckBox = styled.button`\n  width: 50vw;\n  height: 10vh;\n  font-size: 5vh;\n  background-color: #111;\n  border-color: #555;\n  color: #fff;\n`\n\nconst StyledCloseBox = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 3vh;\n  height: 3vh;\n  display: flex;\n  font-size: 5vh;\n  background-color: #000;\n  border-color: #333;\n\n  & p {\n    line-height: 0;\n    position: relative;\n    left: -1vh;\n    font-size: 5vh;\n    color: #c00;\n  }\n`\n\n\nexport default class Menu extends Component {\n  getCheckBox() {\n    const text = this.props.showImage\n               ? \"Hide image\"\n               : \"Show image\"\n    return (\n      <StyledCheckBox\n        onClick={this.props.toggleImage}\n      >\n        {text}\n      </StyledCheckBox>\n    )\n  }\n\n\n  getCloseBox() {\n    return (\n      <StyledCloseBox\n        onClick={this.props.close}\n      >\n        <p>Ã</p>\n      </StyledCloseBox>\n    )\n  }\n//\n\n  render() {\n    const checkBox = this.getCheckBox()\n    const closeBox = this.getCloseBox()\n\n    return (\n      <StyledMenu\n        show={this.props.show}\n      >\n        {checkBox}\n        {closeBox}\n      </StyledMenu>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Item from './Components/item'\nimport Info from './Components/info'\nimport Buttons from './Components/buttonBar'\nimport Menu from './Components/menu'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.go = this.go.bind(this)\n    this.show = this.show.bind(this)\n    this.showMenu = this.showMenu.bind(this)\n    this.toggleInfo = this.toggleInfo.bind(this)\n    this.toggleImage = this.toggleImage.bind(this)\n\n    this.state = {\n      item:      { text: \"\" } //, category: \"\", image: {}, details: []\n    , index:     0\n    , empty:     [\"info\", \"words\"]\n    //info:      <undefined | \"info\" | \"words\" | \"credits\">\n    //menu:      <falsy | true>\n    //hideInfo:  <falsy | true>\n    //showImage: <falsy | true>\n    }\n    this.last = 0\n\n    fetch(\"data/data.json\")\n    .then(\n      result => result.json()\n                .then(data => {\n                   this.colours = data.colours\n                   this.items = data.items\n                   this.initialize()\n                 })\n\n    , error  => console.log(error)\n    )\n\n    window.addEventListener(\"resize\", this.toggleInfo, false)\n  }\n\n\n  initialize() {\n    this.last = this.items.length - 1\n    this.shuffle(this.items)\n    this.toggleInfo()\n    this.go(0)\n  }\n\n\n  shuffle(array) {\n    let ii = array.length\n\n    while (ii) {\n      const jj = Math.floor(Math.random() * ii)\n      ii -= 1\n      const temp = array[ii]\n      array[ii] = array[jj]\n      array[jj] = temp\n    }\n\n    return array // for chaining\n  }\n\n\n  go(index) {\n    switch (index) {\n      case \"next\":\n        index = Math.min(this.state.index + 1, this.last)\n      break\n      case \"back\":\n        index = Math.max(0, this.state.index - 1)\n      break\n      default:\n        if (isNaN(index) || index < 0 || index > this.last) {\n          return\n        }\n    }\n\n    const item = this.items[index]\n    const empty = this.getEmpty(item)\n    this.setState({ item, index, empty })\n  }\n\n\n  getEmpty(item) {\n    const empty = []\n\n    if (!item.words ||Â item.words.length === 0) {\n      empty.push(\"words\")\n    }\n    if (!item.details ||Â item.details[0] === \"ZZZ\") {\n      empty.push(\"info\")\n    }\n\n    return empty\n  }\n\n\n  show(infoType) {\n    let info = this.state.info\n    if (info !== infoType) {\n      info = infoType\n    } else {\n      info = undefined\n    }\n\n    this.setState({ info })\n  }\n\n\n  showMenu(event) {\n    if (event === \"close\" || event.target.tagName === \"DIV\") {\n      const menu = !this.state.menu\n      this.setState({ menu })\n    }\n  }\n\n\n  toggleInfo() {\n    const rect = document.body.getBoundingClientRect()\n    const hideInfo = (rect.width > rect.height) // true in landscape\n    this.setState({ hideInfo })\n  }\n\n\n  toggleImage() {\n    const showImage = !this.state.showImage\n    this.setState({ showImage, menu: false })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Item\n          item={this.state.item}\n          showImage={this.state.showImage}\n        />\n        <Info\n          item={this.state.item}\n          info={this.state.info}\n        />\n        <Buttons\n          go={this.go}\n          show={this.show}\n          info={this.state.info}\n          hide={this.state.hideInfo}\n          first={this.state.index === 0}\n          last={this.state.index === this.last}\n          empty={this.state.empty}\n          showMenu={this.showMenu}\n        />\n        <Menu\n          show={this.state.menu}\n          showImage={this.state.showImage}\n          toggleImage={this.toggleImage}\n          close={()Â => this.showMenu(\"close\")}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}